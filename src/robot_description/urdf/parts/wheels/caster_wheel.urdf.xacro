<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:include filename="$(find robot_description)/urdf/inertial_macros.xacro" />
    <xacro:include filename="$(find robot_description)/urdf/parts/wheels/caster_wheel.gazebo.xacro" />

    <xacro:macro name="caster_wheel" params="side mass base_length wheel_radius wheel_pos_z">
        <xacro:property name="caster_wheel_radius" value="${(wheel_radius - wheel_pos_z) / 2}" />
        <xacro:if value="${side == 'front'}">
            <xacro:property name="caster_wheel_x" value="${(base_length / 2) - caster_wheel_radius}" />
        </xacro:if>

        <xacro:if value="${side == 'rear'}">
            <xacro:property name="caster_wheel_x"
                value="${-(base_length / 2) + caster_wheel_radius}" />
        </xacro:if>

        <link name="${side}_caster_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <sphere radius="${caster_wheel_radius}" />
                </geometry>
                <material name="black">
                    <color rgba="0.0 0.0 0.0 1.0" />
                </material>
            </visual>

            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <sphere radius="${caster_wheel_radius}" />
                </geometry>
            </collision>

            <xacro:inertial_sphere mass="${mass}" radius="${caster_wheel_radius}">
                <origin xyz="0 0 0" rpy="0 0 0" />
            </xacro:inertial_sphere>
        </link>

        <joint name="${side}_caster_wheel_joint" type="fixed">
            <parent link="base_link" />
            <child link="${side}_caster_wheel_link" />
            <origin xyz="${caster_wheel_x} 0 -${caster_wheel_radius}" rpy="0 0 0" />
        </joint>
    </xacro:macro>
</robot>